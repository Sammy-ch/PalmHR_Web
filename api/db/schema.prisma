// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate


datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
  previewFeatures = ["driverAdapters"]
}



model Admin {
id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
first_name String
last_name String
email String
admin_role Admin_Role[]

@@unique([id,email])
}

model Admin_Role{
id Int @id @default(autoincrement())
adminId  String?
role String
admin Admin? @relation(fields: [adminId],references: [id])


@@unique([id,role,adminId])
}

model Employee_profile {
profile_id String @id
first_name String
last_name String
profile_image String?
position String
email String?
daysOff Int?
AttendanceData Employee_attendance[]
LeaveData Leave_Custom[]
}

model Employee_attendance {
AttendanceId BigInt @id @default(autoincrement())
Employee   Employee_profile  @relation(fields: [EmployeeId],references: [profile_id])
EmployeeId String
Checkin_time  DateTime? @db.Time()
Checkout_time DateTime? @db.Time()
Checking_Date DateTime? @db.Date
Working_time DateTime? @db.Time()
presenceTag PresenceTag

}


model Leave_Custom {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  requested_leave_date DateTime
  leave Employee_profile @relation(fields: [leave_id],references: [profile_id])
  leave_id String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  leave_type String @db.Text
  leave_days Int @db.Integer
  leave_approval Boolean? @db.Boolean
}


model Organization {
OrganizationId  String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
OrganizationName String @db.Text
Address String @db.Text
Email String @db.Text
Phone String @db.Text


@@unique([OrganizationId,OrganizationName,Email])
}


enum PresenceTag {
  PRESENT
  LATE
  JUSTIFIED_ABSENCE
  UNJUSTIFIED_ABSENCE
  UNNOTIFIED_ABSENCE
}



